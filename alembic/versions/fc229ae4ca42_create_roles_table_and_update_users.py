"""create_roles_table_and_update_users

Revision ID: fc229ae4ca42
Revises: 11d79b000b5d
Create Date: 2025-08-18 21:55:06.362031

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "fc229ae4ca42"
down_revision: Union[str, Sequence[str], None] = "11d79b000b5d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roles_id"), "roles", ["id"], unique=False)
    op.create_index(op.f("ix_roles_name"), "roles", ["name"], unique=True)

    # Создаем базовые роли
    op.execute(
        "INSERT INTO roles (name, description) VALUES ('admin', 'Administrator with full access')"
    )
    op.execute(
        "INSERT INTO roles (name, description) VALUES ('user', 'Regular user with limited access')"
    )

    # Добавляем колонку role_id как nullable сначала
    op.add_column("users", sa.Column("role_id", sa.Integer(), nullable=True))

    # Устанавливаем значение по умолчанию для существующих пользователей
    op.execute("UPDATE users SET role_id = (SELECT id FROM roles WHERE name = 'user')")

    # Делаем колонку NOT NULL
    op.alter_column("users", "role_id", nullable=False)

    op.create_foreign_key(None, "users", "roles", ["role_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_column("users", "role_id")
    op.drop_index(op.f("ix_roles_name"), table_name="roles")
    op.drop_index(op.f("ix_roles_id"), table_name="roles")
    op.drop_table("roles")
    # ### end Alembic commands ###
